@import './variables';

html,
body {
  scroll-behavior: smooth;
  padding: 0;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  background: $theme-lightgrey !important;
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

@media (max-width: 320px) {
  html {
    font-size: 13px;
  }
}

@media (min-width: 321px) {
  html {
    font-size: 14px;
  }
}

@media (min-width: 576px) {
  html {
    font-size: 14px;
  }
}

@media (min-width: 768px) {
  html {
    font-size: 15px;
  }
}

@media (min-width: 992px) {
  html {
    font-size: 16px;
  }
}

@media (min-width: 1200px) {
  html {
    font-size: 18px;
  }
}

$custom-colors: () !default;
$custom-colors: map-merge(
  (
    'pink': $theme-pink,
    'peach': $theme-peach,
    'brown': $theme-brown,
    'darkgrey': $theme-darkgrey,
    'white': $theme-white,
    'lightgrey': $theme-lightgrey,
  ),
  $custom-colors
);

@each $colorName, $colorValue in $custom-colors {
  .text-#{$colorName} {
    color: $colorValue !important;
  }
  .bg-#{$colorName} {
    background-color: $colorValue !important;
  }
}

.nav-offset-m {
  margin-top: $navbar-height;
}

.cursor-pointer {
  cursor: pointer;
}

.cursor-not-allowed {
  cursor: not-allowed;
}

.hover-darken {
  transition: filter 300ms;
  &:hover {
    filter: brightness(0.8);
  }
}

.hover-light {
  transition: filter 300ms;
  &:hover {
    filter: brightness(1.5);
  }
}

.hover-peach:hover {
  color: $theme-peach;
  transition: color 250ms;
}

.shadow-drop {
  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));
}

.shadow-box {
  box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.04),
    0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),
    0 10px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),
    0 0px 80px rgba(0, 0, 0, 0.12);
}

.center-absolute {
  left: 50%;
  transform: translate(-50%);
}

.border-smooth {
  border-radius: 10px;
}

.clip-image-circle {
  clip-path: circle(50% at 50% 50%);
}
